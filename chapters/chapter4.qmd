---
bibliography: [references.bib]
---

```{css}
#| echo: false
p {
  text-align: justify
}
```

# Antecedentes {#sec-Antecedentes}

```{r}
#| echo: false

source("../_common.R")
```

```{r}
#| results: "asis"
#| echo: false
```

La evolución del análisis estadístico basado en encuestas por muestreo refleja una tensión constante entre la sofisticación metodológica y la necesidad de herramientas tener accesibles y reproducibles. Este capítulo examina el panorama actual de soluciones, desde plataformas institucionales hasta herramientas especializadas, proporcionando el contexto necesario para comprender la contribución de `metasurvey` al campo.

## Monitores y plataformas de datos públicos

El ecosistema uruguayo de datos públicos representa un esfuerzo institucional significativo por democratizar el acceso a la información estadística.

- El **Instituto Nacional de Estadística (INE)** con sus monitores especializados:
  - [Monitor de Mercado de Trabajo](https://www7.ine.gub.uy/Dashboard-%20ML-ECH/MercadoLaboral/)
  - [Monitor de Ingresos de hogares y personas](https://www7.ine.gub.uy/Dashboard-Ingresos-ECH/IngresosHogaresPersonas/)
  - [Mercado de trabajo por área geográfica de referencia](https://www.gub.uy/instituto-nacional-estadistica/comunicacion/publicaciones?field_tipo_de_publicacion_target_id=517&field_tematica_gubuy=525&field_fecha_by_year=All&field_fecha_by_month=All&field_publico_gubuy=All)

- El **Ministerio de Desarrollo Social (MIDES)** a través de su [Observatorio Social](https://www.gub.uy/ministerio-desarrollo-social/observatorio/indicadores)

- La **Oficina de Planeamiento y Presupuesto (OPP)** mediante el [Observatorio Territorio Uruguay](https://otu.opp.gub.uy)

- La **Agencia Nacional de Investigación e Innovación (ANII)** con su portal [PRISMA](https://www.prisma.uy)

El Instituto de Economía (IECON) de la Facultad de Ciencias Económicas y de Administración (FCEA) de la Universidad de la República (UdelaR) cuentan con un trabajo de compatibilización de Encuestas Continuas de Hogares [@institutodeeconomíauniversidaddelarepública2020] para construir y homogeneizar series de tiempo de indicadores de mercado laboral, ingresos y pobreza.

Si bien estas plataformas cumplen un rol fundamental en la diseminación de información estadística, presentan limitaciones significativas en términos de documentación metodológica y capacidades de reproducción. El trabajo del (IECON) sobre la compatibilización de Encuestas Continuas de Hogares [@institutodeeconomíauniversidaddelarepública2020] representa un avance importante, pero la ausencia de herramientas estandarizadas para la documentación y reproducción de procesos sigue siendo un desafío pendiente.

Además, la integración de datos provenientes de múltiples fuentes institucionales a menudo requiere procesos de limpieza y transformación manuales, lo que no solo incrementa la carga de trabajo de los analistas sino que también introduce potenciales sesgos y errores humanos. La falta de una estandarización en los procedimientos de procesamiento de datos complica la comparación de resultados entre diferentes estudios y limita la capacidad de realizar análisis longitudinales robustos.

Este contexto se resalta la necesidad de desarrollar herramientas que no solo faciliten el acceso a los datos, sino que también promuevan la transparencia metodológica y la reproducibilidad de los análisis. En este sentido, `metasurvey` surge como una respuesta innovadora, orientada a intentar superar estas limitaciones mediante la automatización y estandarización de los procesos de limpieza y transformación de los datos.

## Ecosistema de herramientas en R

El análisis de encuestas en R ha evolucionado desde implementaciones aisladas hacia un ecosistema interconectado de herramientas especializadas. El paquete `survey` establece los fundamentos estadísticos, mientras que extensiones como `srvyr`, `gustave`, `vardpoor` y `convey` abordan necesidades específicas de estimación y análisis. Los paquetes dedicados a encuestas nacionales como `ech`, `eph` y `casen` complementan este ecosistema adaptando las herramientas generales a contextos específicos.

```{r}
#| echo: false
#| message: false
#| warning: false
#| error: false
library(gt)
library(gh)

get_repo_info <- function(owner, repo) {
  # Obtener la última versión (tag)
  releases <- gh::gh(
    "/repos/{owner}/{repo}/releases",
    owner = owner,
    repo = repo
  )
  latest_release <- if (length(releases) > 0) {
    releases[[1]]$tag_name
  } else {
    "No release"
  }

  # Obtener el último commit
  commits <- gh::gh(
    "/repos/{owner}/{repo}/commits",
    owner = owner,
    repo = repo
  )
  latest_commit_date <- if (length(commits) > 0) {
    commits[[1]]$commit$author$date
  } else {
    "No commit"
  }

  list(
    version = latest_release,
    commit = latest_commit_date
  )
}

# Obtener información de cada repositorio
survey_info <- get_repo_info("cran", "survey")
srvyr_info <- get_repo_info("gergness", "srvyr")
gustave_info <- get_repo_info("inseeFr", "gustave")
vardpoor_info <- get_repo_info("CSBLatvia", "vardpoor")
convey_info <- get_repo_info("ajdamico", "convey")
svrep_info <- get_repo_info("cran", "svrep")

# Definir los datos para la tabla
data <- data.frame(
  Paquete = c(
    "[survey](https://github.com/cran/survey)",
    "[srvyr](https://github.com/gergness/srvyr)",
    "[gustave](https://github.com/InseeFr/gustave)",
    "[vardpoor](https://github.com/CSBLatvia/vardpoor)",
    "[convey](https://github.com/AnthonyChristidis/convey)",
    "[svrep](https://github.com/cran/svrep)"
  ),
  Descripción = c(
    "Permite el análisis de encuestas complejas, aquí se pueden definir los estratos, los conglomerados y las ponderaciones, además tiene implementaciones de los estimadores más comunes como el estimador de Horvitz-Thompson, el estimador de regresión y el estimador de calibración. Sin embargo, dentro de este mismo paquete no existe una forma de integrar los pasos de limpieza y transformación de los datos de manera sencilla y visualizar el flujo de trabajo. Este paquete es utilizado como dependencia **clave** para ocupar los principales estimadores poblacionales y diseño muestral.",
    "Es una interfaz para el paquete `survey` que permite trabajar con `dplyr` y `tidyverse`, sin embargo, no permite de forma nativa la reutilización de los pasos de limpieza y transformación de los datos de manera sencilla y visualizar el flujo de trabajo aunque permite la integración con `dplyr` y `tidyverse`. Este paquete cuenta con muchas dependencias debido al uso de `tidyverse` y va en contra de la filosofía de `metasurvey` de tener la menor cantidad de dependencias posibles. Además metasurvey tiene su propia capa de abstracción para trabajar con `survey`.",
    "Cuenta con una función principal `qvar` que no utiliza el diseño muestral como argumento sino que se deben de ingresar las probabilidades de inclusión y no queda del todo claro los estadísticos que se pueden obtener. Además, no permite la reutilización de los pasos de limpieza y transformación de los datos de manera sencilla y visualizar el flujo de trabajo. Si bien tiene diferentes implementaciones de aproximación de varianzas como la de Deville y Tillé, no es la forma de estimación que utiliza `metasurvey` por defecto aunque puede ser una alternativa para futuras implementaciones.",
    "Este paquete utiliza la estimación de varianzas por el método de último conglomerado, otras métricas como el efecto diseño, linealización del estimador de razón, coeficiente de Gini y diferentes estadísticos enfocados en la desigualdad. Si bien es una implementación interesante, su sintaxis es particular y ajena a la del paquete `survey`, tiene muy pocas dependencias pero puede ser implementado como motor de estimación de varianzas en futuras implementaciones.",
    "Este paquete sí utiliza el diseño muestral como argumento e implementa algunos estadísticos que se incluyen en `vardpoor`, sin embargo, no permite la reutilización de pasos de limpieza y transformación de los datos de manera sencilla y visualizar el flujo de trabajo. Sin embargo, al tener una implementación del diseño muestral, se sincroniza muy bien con `metasurvey`. Los estadísticos pueden ser utilizados de forma nativa en `metasurvey`.",
    "Extensión del paquete `survey` para generar réplicas sobre los pesos muestrales, permite la estimación de varianzas por el método de Bootstrap, Jackknife y replicación de balanceo. La integración con el diseño del tipo `bootstrap` y `jackknife`. Este paquete es utilizado como dependencia **clave** en el caso de necesitar generar nuevas replicas de los pesos muestrales, aunque esto no es necesario para la mayoría de los casos o no se cuenta con la información necesaria para realizarlo."
  ),
  ultimo_Commit = c(
    survey_info$commit,
    srvyr_info$commit,
    gustave_info$commit,
    vardpoor_info$commit,
    convey_info$commit,
    svrep_info$commit
  )
)

# Crear la tabla gt con renderizado de Markdown y un tema personalizado
gt_table <- data |>
  gt() |>
  tab_header(
    title = "Comparación de Paquetes para Análisis de Encuestas",
    subtitle = "Información actualizada sobre versiones y últimos commits"
  ) |>
  cols_label(
    Paquete = "Paquete",
    Descripción = "Descripción",
    ultimo_Commit = "Último Commit"
  ) |>
  tab_source_note(
    source_note = "Datos extraídos desde GitHub a través de la API."
  ) |>
  fmt_markdown(columns = c(Descripción)) |>
  fmt_markdown(columns = c(Paquete)) |>
  cols_align(
    align = "left",
    columns = c(Paquete, Descripción, ultimo_Commit)
  ) |>
  opt_table_font(
    font = list(google_font("Roboto"), default_fonts())
  ) |>
  tab_options(
    table.font.size = px(12),
    data_row.padding = px(8),
    table.border.top.color = "black",
    table.border.bottom.color = "black",
    heading.background.color = "#f5f5f5",
    row.striping.background_color = "#f0f0f0"
  ) |>
  opt_row_striping()

gtsave(gt_table, "Figures/tabla.pdf")
```

La [@tbl-comparacion-paquetes] presenta un análisis detallado de los principales paquetes de R utilizados para el análisis de encuestas por muestreo. Esta comparación revela aspectos fundamentales de cada implementación. En cuanto a los paquetes base, `survey` se destaca como el componente fundamental para el análisis de encuestas complejas, implementando los estimadores más comunes y sirviendo como dependencia clave para otros paquetes, mientras que `srvyr` ofrece una interfaz más moderna usando `tidyverse`, aunque esto implica incorporar múltiples dependencias.

En el ámbito de los paquetes especializados en varianza, gustave implementa métodos específicos como Deville y Tillé, mientras que `vardpoor` se enfoca en el método de último conglomerado. Por su parte, `svrep` provee métodos de replicación como Bootstrap y Jackknife. En cuanto a paquetes para análisis específicos, `convey` se especializa en medidas de desigualdad y se integra eficientemente con el diseño muestral.

Un aspecto crucial que se evidencia en la tabla [@tbl-comparacion-paquetes] es que, si bien cada paquete tiene sus fortalezas específicas, ninguno aborda completamente la necesidad de reutilización de procesos de limpieza y transformación, visualización del flujo de trabajo, ni documentación integrada del proceso. Esta comparación fue fundamental para decidir las dependencias de metasurvey, optando por survey como motor principal de estimación y svrep para métodos de replicación, mientras se evitan dependencias innecesarias que podrían comprometer la mantenibilidad.

```{r}
#| tbl-cap: Comparación de paquetes para análisis de encuestas
#| label: tbl-comparacion-paquetes
library(reactable)
library(htmltools)

if (knitr::is_html_output()) {
  reactable_table <- reactable(
    data,
    columns = list(
      Paquete = colDef(
        name = "Paquete",
        cell = function(value) {
          shiny::markdown(value)
        },
        html = TRUE
      ),
      Descripción = colDef(
        name = "Descripción",
        cell = function(value) {
          shiny::markdown(value)
        },
        html = TRUE
      ),
      ultimo_Commit = colDef(name = "Último Commit")
    ),
    striped = TRUE,
    highlight = TRUE
  )
  reactable_table
} else {
  knitr::include_graphics("Figures/tabla.pdf")
}
```

El análisis del ecosistema actual revela cuatro limitaciones principales: la dificultad en la reutilización de procesos, la falta de visualización del flujo de trabajo, la rigidez ante cambios estructurales y la opacidad en la implementación. `metasurvey` se desarrolló como respuesta a estas limitaciones, adoptando un enfoque de meta-programación que permite abstraer los procesos de transformación en elementos reutilizables, visualizar y documentar el flujo de trabajo, mantener la flexibilidad ante cambios en las estructuras de datos y aprovechar las capacidades de paquetes establecidos como `survey` y `svrep`.
