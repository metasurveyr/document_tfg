---
bibliography: references.bib
execute:
  cache: true
---

```{css}
#| echo: false
p {
  text-align: justify
}
```

```{r}
#| echo: false
#| label: setup
source("../_common.R")
```

```{r}
#| results: "asis"
#| echo: false
#| label: status-chapter

status(
  "validacion"
)
```

# Introducción {#sec-Chapter1}

En este trabajo se presenta el paquete `metasurvey`, una herramienta para el procesamiento y obtención de indicadores a partir de encuestas por muestreo. El paquete proporciona al usuario control total y transparencia en el proceso de transformación de microdatos a indicadores, permitiendo validar y entender su construcción. Además, facilita la creación de variables sintéticas, recodificación de variables con criterios complejos y el tratamiento de variables continuas como el ingreso salarial mediante una metodología rigurosa y fácil de implementar. Es crucial que este proceso sea transparente y entendible para el usuario.

## Motivación

Las encuestas por muestreo son una herramienta fundamental para la obtención de información sobre cierta población de interés, ya que permiten obtener información a partir de una muestra representativa de la misma. Cada encuesta por muestreo tiene una estructura y un proceso generador de datos que permite obtener estimaciones puntuales y sus errores asociados. En general, el procesamiento de encuestas puede ser tedioso, propenso a errores o difíciles de brindar transparencia y reproducibilidad, especialmente si se quiere obtener indicadores que requieren varios pasos como tasas de mercado laboral, ingreso salarial, índices de pobreza, entre otros [@vilhuber2020].

En general, el proceso de transformación de los microdatos a indicadores requiere de un conocimiento profundo de la encuesta y en su mayoría no es de conocimiento general. Si bien existen diferentes esfuerzos para facilitar el procesamiento de encuestas, en general estas herramientas computacionales tienen limitaciones en cuanto a la flexibilidad y transparencia del proceso de transformación de los microdatos a indicadores de interés. Estas implementaciones son muy sensibles a la estructura y las variables que componen la encuesta, un cambio en la estructura de la encuesta suele implicar una actualización del paquete utilizado para obtener los indicadores en la nueva edición de la encuesta, lo que resulta poco flexible ante cambios en la estructura, que pueden ser frecuentes en la práctica.

En este sentido, es importante construir una herramienta que permita a los usuarios tener un control total sobre el proceso de transformación de los microdatos a indicadores, ya que esto permite que se pueda validar y entender el proceso de construcción de indicadores, de una forma totalmente desacoplada dentro de las implementaciones de cada función.

Dentro de este documento se detalla el desarrollo de una herramienta que permita al usuario con simples pasos la construcción de indicadores junto a una forma de obtener metodologías brindadas por la comunidad científica pudiendo reproducir los resultados o incluir de forma sencilla la metodología en su propio código. Esta herramienta permite al usuario tener un control total sobre el proceso de transformación de los microdatos a indicadores, de forma que el proceso de construcción de los mismos se pueda entender y validar.

## Contexto

En la teoría de la inferencia de poblaciones finitas, es crucial considerar la incertidumbre y los errores asociados a las estimaciones producidas. Generalmente, esto no es tomado en cuenta por usuarios no expertos en metodología de muestreo, lo que puede llevar a conclusiones erróneas. En algunos casos, la estimación puede tener una alta variabilidad o haber sido calculado sin considerar el diseño muestral correctamente.

Es importante distinguir entre los enfoques de inferencia estadística **model-based inference** y **design-based inference** [@lumley2011]. En el primer enfoque, se asume que la población de interés puede modelarse mediante un modelo probabilístico, y se obtienen estimaciones de los parámetros del modelo mediante técnicas de inferencia estadística. En el segundo enfoque, se asume que la población de interés es finita y se obtienen estimaciones de los parámetros de la población mediante técnicas de muestreo.

En este trabajo se mencionará intensivamente el concepto de peso o ponderador y su importancia en la estimación de varianzas y errores asociados a las estimaciones. En estadística, existen diferentes conceptos referidos a ponderadores o pesos, entre ellos (basado en [@lumley2011]):

-   **Pesos muestrales**: Refieren a la cantidad de veces que un individuo de la población de interés está representado en la muestra. Estos pesos provienen del diseño muestral, ya sea por el inverso de las probabilidades de selección, ajustes por no respuesta, entre otros.
-   **Pesos de precisión**: Relacionados con la variabilidad que tiene una observación sobre la estimación de un parámetro.
-   **Pesos de frecuencia**: Refieren a la cantidad de veces que aparece un individuo en una muestra y se resumen para incluir en un único registro.

Es importante hacer esta distinción ya que, tomando en cuenta los pesos en cualquiera de sus definiciones, en la mayoría de los casos **se pueden obtener estimaciones puntuales correctas**. Sin embargo, como se mencionó anteriormente, llegar a medidas de incertidumbre como errores estándar e intervalos de confianza válidos es más complejo.

Además de la inferencia, es crucial considerar el proceso de transformación de los microdatos a indicadores para interpretar correctamente los indicadores y realizar comparaciones a lo largo del tiempo. Muchas veces, diferentes usuarios realizan el mismo esfuerzo de construcción de indicadores de manera independiente y sin compartir el código fuente o la metodología, ya que cada uno utiliza su propio estilo de programación o diferentes paquetes estadísticos, en su mayoría propietarios como SPSS [@spss], SAS [@sas] o STATA [@stata]. Aunque el usuario puede compartir la sintaxis para su construcción, la misma está ligada al software y depende de que el usuario tenga el software instalado con una licencia activa.

En los últimos años, el uso de R [@rcoreteam2023] ha crecido exponencialmente en la comunidad científica, especialmente en estadística y ciencia de datos. R es un lenguaje de programación de código abierto ampliamente utilizado para el análisis de datos, estadística y aprendizaje automático. En R, se utiliza el concepto de *paquete* para referirse a una colección de funciones, métodos y clases que extienden las funcionalidades de R propuestas por la comunidad de usuarios. En este sentido, `metasurvey` busca ser una herramienta relevante para el trabajo con encuestas por muestreo en diversas disciplinas, solucionando las limitaciones mencionadas anteriormente.

Es importante definir el concepto de Estadística Computacional y su diferencia con Computación Estadística [@gentle2009], siendo este trabajo un aporte a la Computación Estadística. La Estadística Computacional se refiere a la implementación de algoritmos y métodos estadísticos en un lenguaje de programación, mientras que la Computación Estadística se refiere a la utilización de herramientas computacionales para resolver problemas estadísticos. R permite realizar tanto Estadística Computacional como Computación Estadística, ya que cuenta con una amplia variedad de paquetes que permiten implementar algoritmos y métodos estadísticos y realizar análisis de datos de manera eficiente y reproducible.

## Antecedentes e implementaciones similares

Actualmente existen diversos esfuerzos para facilitar el procesamiento de encuestas. Estos pueden clasificarse principalmente en dos tipos de paquetes:

-   **Paquetes para inferencia estadística**: Implementan metodologías de inferencia en muestreo de poblaciones finitas, como `survey` [@lumley2024],`srvyr` [@srvyr], `gustave` [@chevalier2023], `vardpoor` [@breidaks2020], `svrep` [@schneider2023] y `weights`.

-   **Paquetes para encuestas específicas**: Permiten acceder y manipular datos de encuestas particulares:

    -   `ech`: Procesa la **Encuesta Continua de Hogares (ECH)** del Instituto Nacional de Estadística (INE) de Uruguay [@detomasi2020]
    -   `eph`: Procesa la **Encuesta Permanente de Hogares (EPH)** del Instituto Nacional de Estadística y Censos (INDEC) de Argentina [@kozlowski2020]
    -   `tidycensus`: Obtiene datos del **Censo de Estados Unidos** [@walker2024]
    -   `casen`: Procesa la **Encuesta de Caracterización Socioeconómica Nacional (CASEN)** del Ministerio de Desarrollo Social y Economía de Chile [@vargas2024]

Sin embargo, estos últimos tienen limitaciones en cuanto a la flexibilidad y transparencia del proceso de transformación de los microdatos a indicadores de interés, como puede ser el índice de pobreza, tasas del mercado laboral, ingreso salarial, etc. En general, sus implementaciones son muy sensibles a la estructura y las variables que componen la encuesta, un cambio en la estructura de la encuesta suele implicar una actualización del paquete utilizado para obtener los indicadores en la nueva edición de la encuesta, lo que resulta poco flexible ante cambios en la estructura, que pueden ser frecuentes en la práctica. Además en las implementaciones actuales, el usuario cuenta con una función de alto nivel que actúa como una caja negra, donde no se permite modificar el código para adaptarlo a sus necesidades o entender cada paso que se realiza para obtener el indicador sin tener que leer el código fuente o la documentación adjunta.

## Propuesta

Para científicos sociales, es importante tener en cuenta que el proceso de transformación de los microdatos a indicadores requiere de un conocimiento profundo de la encuesta y en su mayoría no es de conocimiento general. Es de interés obtener información histórica de indicadores y en general es un proceso tedioso y propenso a errores, especialmente si proviene de encuestas donde su estructura y/o forma de preguntar o su codificación puede cambiar con el tiempo. Esto resulta en un proceso extenso y difícil de entender hasta llegar a la construcción de esta serie de indicadores. Muchas veces, diferentes usuarios hacen el mismo proceso de construcción de indicadores de manera independiente y sin compartir el código fuente o la metodología de construcción de indicadores, ya que cada uno utiliza su propio estilo de programación o hasta diferentes paquetes estadísticos, en su mayoría propietarios como SPSS [@spss], SAS [@sas] o STATA [@stata], donde si bien el usuario puede compartir la sintaxis para su construcción, esta está ligada al software y depende de que el usuario tenga el software instalado con una licencia activa y pueda correr el código.

En este sentido, es importante que el usuario pueda tener un control total sobre el proceso de transformación de los microdatos a indicadores, ya que esto permite que el usuario pueda validar y entender el proceso de construcción de indicadores, además de brindar una herramienta común libre de estilos de programación y definiendo con simples pasos el proceso de construcción de variables sintéticas, como recodificar variables creando grupos en base a criterios complejos, tratamiento de variables continuas como el ingreso salarial en base a una metodología rigurosa y fácil de referenciar en la implementación. Es crucial que este proceso sea transparente y entendible para el usuario. En capítulos posteriores se abordarán ejemplos con los paquetes mencionados anteriormente y se presentará el paquete `metasurvey` y su implementación de *recetas* para la construcción de indicadores mediante la meta-programación.

Al trabajar con encuestas por muestreo, es importante tener en cuenta la forma en la que se obtuvieron los datos y su proceso generador para poder realizar inferencias sobre la población de interés. En general, obtener estimaciones puntuales de estadísticos de totales, promedios o proporciones es relativamente sencillo, pero puede ser que se reporte una estimación donde no exista un tamaño de muestra suficiente para obtener una estimación confiable y/o que la variabilidad de la estimación sea alta y no sea recomendable su uso. En este sentido, es importante que el usuario no experto tenga de forma nativa una forma de obtener estimaciones puntuales y sus errores asociados de manera sencilla. Es común utilizar estimaciones puntuales sin tener una medida de incertidumbre o aún peor incluir una estimación del error estándar sin tener en cuenta el diseño muestral correcto, lo que puede llevar a conclusiones erróneas sobre la variabilidad de la estimación. `metasurvey` permite que el usuario pueda obtener estimaciones puntuales y sus errores asociados de forma nativa y con estos resultados hacer recomendaciones sobre la utilidad y confianza de la estimación mediante coeficientes de variación, intervalos de confianza, tamaño de muestra efectivo, entre otros sin tener que ser un experto en metodología de estimación de varianzas y remuestreo. En capítulos posteriores se abordarán ejemplos con los paquetes mencionados anteriormente y se presentará el paquete `metasurvey` y su implementación de estimaciones puntuales y sus errores asociados.

## Definición del Alcance

`metasurvey` está diseñado para científicos sociales, estadísticos y economistas que trabajan con encuestas por muestreo. Permite a estos usuarios manejar y transformar microdatos en indicadores de manera transparente, flexible y reproducible.

## Desarrollo del paquete `metasurvey`

El desarrollo de un paquete en R es un proceso que requiere contar con una idea bien formada y los medios para llevarla a cabo, es por esto que es importante contar con una metodología de trabajo ordenada, heredada del desarrollo de software convencional, ya que para la publicación y difusión del paquete se tienen que cumplir con ciertos estándares de calidad y documentación para que otros usuarios puedan utilizarlo. En este sentido, es importante tener en cuenta que el desarrollo de un paquete en R puede llevar tiempo y esfuerzo, a consecuencia de esto, en el documento se presentarán diferentes conceptos sobre metodología para el desarrollo de paquetes en R y se abordarán ejemplos con la implementación de `metasurvey`.

En este sentido, `metasurvey` pretende ser una herramienta relevante para el trabajo con encuestas por muestreo en general ya sea en las ciencias sociales o el uso genérico para otras disciplinas, buscando solucionar las limitaciones anteriormente mencionadas. Todo el proceso de transformación de los microdatos a indicadores se realiza a través de una serie de funciones que permiten al usuario tener un control total y transparente sobre el proceso de transformación de los microdatos a indicadores. Además, `metasurvey` permite que el usuario pueda realizar el proceso de transformación de los microdatos a indicadores de manera reproducible y transparente. El usuario puede compartir el código de una forma entendible, casi como un "recetario de cocina". El procedimiento aplicado a los datos utilizados para obtener los indicadores se realiza mediante lo que denominamos steps y recipes, conformando así una especie de camino transparente para la construcción de indicadores. Esto permite compartir en forma visual un DAG (Directed Acyclic Graph) que permite visualizar el proceso de construcción de indicadores sin tener que abrir un script de R. En complemento al proceso de creación de variables, `metasurvey` permite que el usuario pueda obtener estimaciones puntuales y sus errores asociados de manera sencilla y brindar recomendaciones sobre la utilidad de la estimación en el caso de que se cuente con una variabilidad alta en la estimación, en base a recomendaciones a su coeficiente de variación o métricas similares.

El enfoque que permite la flexibilidad a la hora de construir los indicadores es la meta-programación. La meta-programación es un paradigma de programación que permite que un programa pueda modificar su estructura interna en tiempo de ejecución. En R, la meta-programación se realiza a través de las funciones `eval`, `parse`, `substitute`, `do.call` y `quote`, que permiten evaluar y parsear código de manera dinámica. En este sentido, `metasurvey` utiliza la meta-programación para permitir que el usuario pueda modificar el código que se utiliza para transformar los microdatos a indicadores, teniendo funciones de alto nivel similares a las que se utilizan en el paquete recipes de la librería `tidymodels` [@kuhn2024].

## Esquema del documento

El documento se estructura de la siguiente manera: en el siguiente capítulo se presentará un marco conceptual básico sobre el muestreo de poblaciones finitas, diferentes paradigmas de programación como puede ser la programación orientada a objetos, programación funcional y la meta-programación así como su uso el desarrollo de paquetes. Luego, se ahondará en antecedentes sobre metodologías de estimación de varianzas y otros paquetes en R en el que se basa el desarrollo de `metasurvey`. Finalmente, se presentarán ejemplos de cómo utilizar el paquete `metasurvey` para construir indicadores de mercado laboral a partir de los microdatos de la **ECH** y para mostrar su flexibilidad, se incluirá un ejemplo con la **EPH**.

Este documento puede leerse en su formato de [pagina web](https://metasurveyr.github.io/informe_tfg/) o en su formato de [documento PDF](https://metasurveyr.github.io/informe_tfg/metasurvey.pdf). Tanto el código fuente del paquete se encuentran disponibles de forma pública en el repositorio de [Github](https://github.com/metasurveyr/metasurvey) y el código fuente de este documento se encuentra disponible en el [repositorio](https://github.com/metasurveyr/informe_tfg). Para la realización de este documento se utilizó `quarto` [@publishing2024] para la generación de documentos dinámicos que permiten escribir texto junto con código R.

Para finalizar, es importante mencionar que el paquete `metasurvey` es un proyecto en desarrollo y se encuentra en una etapa temprana de desarrollo, por lo que se espera que en el futuro se realicen mejoras y se agreguen nuevas funcionalidades, por lo que se invita a la comunidad a colaborar en el desarrollo del paquete a través de la creación de [issues](https://github.com/metasurveyr/metasurvey/issues) en el repositorio de GitHub o mediante *pull requests* con mejoras o nuevas funcionalidades.

Para poder continuar con el documento, se recomienda instalar metasurvey en su versión de desarrollo, para ello se puede ejecutar el siguiente [código @lst-install-cran]

::: {#lst-install-cran}
```{r}
#| echo: true
#| message: false
#| eval: false


branch <- "develop"

is_available <- "metasurvey" %in% rownames(
  available.packages(
    repos = "https://cloud.r-project.org/"
  )
)

if (is_available) {
  install.packages("metasurvey")
} else {
  remotes::install_github(
    "metasurveyr/metasurvey",
    ref = branch,
    force = TRUE
  )
  message("Se instaló la versión de desarrollo de metasurvey")
}
```

Instalación de metasurvey
:::